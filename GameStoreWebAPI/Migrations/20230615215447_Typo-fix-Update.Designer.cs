// <auto-generated />
using System;
using GameStoreWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreWebAPI.Migrations
{
    [DbContext(typeof(GameStoreDBContext))]
    [Migration("20230615215447_Typo-fix-Update")]
    partial class TypofixUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamesGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameID");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("GenreID");

                    b.HasKey("GameId", "GenreId")
                        .HasName("PK__GamesGen__DA80C78846F82486");

                    b.HasIndex("GenreId");

                    b.ToTable("GamesGenres", (string)null);
                });

            modelBuilder.Entity("GamesPlatform", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameID");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int")
                        .HasColumnName("PlatformID");

                    b.HasKey("GameId", "PlatformId")
                        .HasName("PK__GamesPla__95ED08B0F9E5EDE7");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamesPlatforms", (string)null);
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int")
                        .HasColumnName("DeveloperID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasColumnType("smallmoney");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<byte?>("Score")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Purchase", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameID");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserId", "GameId")
                        .HasName("PK__Purchase__D52345D10AF4019E");

                    b.HasIndex("GameId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Review", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameID");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<byte>("Score")
                        .HasColumnType("tinyint");

                    b.HasKey("UserId", "GameId")
                        .HasName("PK__Review__D52345D18161759A");

                    b.HasIndex("GameId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Login" }, "UQ__Users__5E55825B25F41094")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534F2941804")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GamesGenre", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__GamesGenr__GameI__398D8EEE");

                    b.HasOne("GameStoreWebAPI.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK__GamesGenr__Genre__3A81B327");
                });

            modelBuilder.Entity("GamesPlatform", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__GamesPlat__GameI__35BCFE0A");

                    b.HasOne("GameStoreWebAPI.Models.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .IsRequired()
                        .HasConstraintName("FK__GamesPlat__Platf__36B12243");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Game", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .IsRequired()
                        .HasConstraintName("FK__Games__Developer__31EC6D26");

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Purchase", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Game", "Game")
                        .WithMany("Purchases")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchases__GameI__3E52440B");

                    b.HasOne("GameStoreWebAPI.Models.User", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchases__UserI__3D5E1FD2");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Review", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__GameID__4222D4EF");

                    b.HasOne("GameStoreWebAPI.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__UserID__412EB0B6");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.User", b =>
                {
                    b.HasOne("GameStoreWebAPI.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleID__2E1BDC42");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Developer", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Game", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GameStoreWebAPI.Models.User", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
